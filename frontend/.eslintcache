[{"K:\\React_workshop\\E-container\\frontend\\src\\index.js":"1","K:\\React_workshop\\E-container\\frontend\\src\\App.js":"2","K:\\React_workshop\\E-container\\frontend\\src\\reportWebVitals.js":"3","K:\\React_workshop\\E-container\\frontend\\src\\store.js":"4","K:\\React_workshop\\E-container\\frontend\\src\\reducers\\productReducer.js":"5","K:\\React_workshop\\E-container\\frontend\\src\\Header.js":"6","K:\\React_workshop\\E-container\\frontend\\src\\Footer.js":"7","K:\\React_workshop\\E-container\\frontend\\src\\Home.js":"8","K:\\React_workshop\\E-container\\frontend\\src\\Product.js":"9","K:\\React_workshop\\E-container\\frontend\\src\\actions\\productAction.js":"10","K:\\React_workshop\\E-container\\frontend\\src\\Rating.js":"11","K:\\React_workshop\\E-container\\frontend\\src\\ProductDescription.js":"12","K:\\React_workshop\\E-container\\frontend\\src\\cart.js":"13","K:\\React_workshop\\E-container\\frontend\\src\\Cart.js":"14","K:\\React_workshop\\E-container\\frontend\\src\\Message.js":"15","K:\\React_workshop\\E-container\\frontend\\src\\Loader.js":"16","K:\\React_workshop\\E-container\\frontend\\src\\reducers\\cartReducer.js":"17","K:\\React_workshop\\E-container\\frontend\\src\\actions\\cartAction.js":"18","K:\\React_workshop\\E-container\\frontend\\src\\reducers\\userReducer.js":"19","K:\\React_workshop\\E-container\\frontend\\src\\userLogin.js":"20","K:\\React_workshop\\E-container\\frontend\\src\\FormContainer.js":"21","K:\\React_workshop\\E-container\\frontend\\src\\actions\\userAction.js":"22","K:\\React_workshop\\E-container\\frontend\\src\\UserLogin.js":"23","K:\\React_workshop\\E-container\\frontend\\src\\Register.js":"24","K:\\React_workshop\\E-container\\frontend\\src\\Profile.js":"25","K:\\React_workshop\\E-container\\frontend\\src\\Shipping.js":"26","K:\\React_workshop\\E-container\\frontend\\src\\checkoutSteps.js":"27","K:\\React_workshop\\E-container\\frontend\\src\\CheckoutSteps.js":"28","K:\\React_workshop\\E-container\\frontend\\src\\PlaceOrder.js":"29","K:\\React_workshop\\E-container\\frontend\\src\\PaymentScreen.js":"30","K:\\React_workshop\\E-container\\frontend\\src\\reducers\\orderReducer.js":"31","K:\\React_workshop\\E-container\\frontend\\src\\actions\\orderActions.js":"32","K:\\React_workshop\\E-container\\frontend\\src\\Orders.js":"33","K:\\React_workshop\\E-container\\frontend\\src\\UserListScreen.js":"34","K:\\React_workshop\\E-container\\frontend\\src\\UserEditScreen.js":"35","K:\\React_workshop\\E-container\\frontend\\src\\ProductListScreen.js":"36","K:\\React_workshop\\E-container\\frontend\\src\\ProductEditScreen.js":"37","K:\\React_workshop\\E-container\\frontend\\src\\OrderListScreen.js":"38","K:\\React_workshop\\E-container\\frontend\\src\\SearchBox.js":"39","K:\\React_workshop\\E-container\\frontend\\src\\Paginate.js":"40","K:\\React_workshop\\E-container\\frontend\\src\\ProductCarousel.js":"41"},{"size":593,"mtime":1607324989073,"results":"42","hashOfConfig":"43"},{"size":2367,"mtime":1608905433711,"results":"44","hashOfConfig":"43"},{"size":362,"mtime":499162500000,"results":"45","hashOfConfig":"43"},{"size":2304,"mtime":1608894710281,"results":"46","hashOfConfig":"43"},{"size":3347,"mtime":1608894649017,"results":"47","hashOfConfig":"43"},{"size":2284,"mtime":1608905769178,"results":"48","hashOfConfig":"43"},{"size":346,"mtime":1608904097316,"results":"49","hashOfConfig":"43"},{"size":1404,"mtime":1608903966157,"results":"50","hashOfConfig":"43"},{"size":796,"mtime":1608898986274,"results":"51","hashOfConfig":"43"},{"size":5519,"mtime":1608894819483,"results":"52","hashOfConfig":"43"},{"size":2069,"mtime":1607261792103,"results":"53","hashOfConfig":"43"},{"size":7418,"mtime":1608800264307,"results":"54","hashOfConfig":"43"},{"size":164,"mtime":1607264931206,"results":"55","hashOfConfig":"43"},{"size":4076,"mtime":1607434168634,"results":"56","hashOfConfig":"43"},{"size":248,"mtime":1607333764357,"results":"57","hashOfConfig":"43"},{"size":403,"mtime":1607333897683,"results":"58","hashOfConfig":"43"},{"size":1372,"mtime":1607956506294,"results":"59","hashOfConfig":"43"},{"size":1206,"mtime":1607931404395,"results":"60","hashOfConfig":"43"},{"size":3098,"mtime":1608899313999,"results":"61","hashOfConfig":"43"},{"size":1919,"mtime":1607588809820,"results":"62","hashOfConfig":"43"},{"size":415,"mtime":1607607795221,"results":"63","hashOfConfig":"43"},{"size":6337,"mtime":1608899210535,"results":"64","hashOfConfig":"43"},{"size":2360,"mtime":1607778237068,"results":"65","hashOfConfig":"43"},{"size":3506,"mtime":1607685795835,"results":"66","hashOfConfig":"43"},{"size":5901,"mtime":1608899647095,"results":"67","hashOfConfig":"43"},{"size":2920,"mtime":1607929310884,"results":"68","hashOfConfig":"43"},{"size":1468,"mtime":1607868701332,"results":"69","hashOfConfig":"43"},{"size":1468,"mtime":1607868701332,"results":"70","hashOfConfig":"43"},{"size":6276,"mtime":1608016427596,"results":"71","hashOfConfig":"43"},{"size":2294,"mtime":1607940668136,"results":"72","hashOfConfig":"43"},{"size":2911,"mtime":1608789684224,"results":"73","hashOfConfig":"43"},{"size":4206,"mtime":1608790394436,"results":"74","hashOfConfig":"43"},{"size":7984,"mtime":1608471112760,"results":"75","hashOfConfig":"43"},{"size":2830,"mtime":1608635154515,"results":"76","hashOfConfig":"43"},{"size":3127,"mtime":1608636318699,"results":"77","hashOfConfig":"43"},{"size":4046,"mtime":1608905287211,"results":"78","hashOfConfig":"43"},{"size":6039,"mtime":1608654116724,"results":"79","hashOfConfig":"43"},{"size":2542,"mtime":1608790727803,"results":"80","hashOfConfig":"43"},{"size":784,"mtime":1608902793931,"results":"81","hashOfConfig":"43"},{"size":776,"mtime":1608820198159,"results":"82","hashOfConfig":"43"},{"size":1247,"mtime":1608895157759,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"1p1ryad",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"86"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"86"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"125","messages":"126","errorCount":2,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"86"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"86"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"147","usedDeprecatedRules":"86"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"86"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"86"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"K:\\React_workshop\\E-container\\frontend\\src\\index.js",[],["174","175"],"K:\\React_workshop\\E-container\\frontend\\src\\App.js",[],"K:\\React_workshop\\E-container\\frontend\\src\\reportWebVitals.js",[],"K:\\React_workshop\\E-container\\frontend\\src\\store.js",[],"K:\\React_workshop\\E-container\\frontend\\src\\reducers\\productReducer.js",["176"],"import axios from 'axios'\r\n\r\nexport const productListReducer = (state = { products: []}, action) => {\r\n    switch (action.type) {\r\n        case 'PRODUCT_LIST_REQUEST': \r\n         return { loading: true, products: []}\r\n         case 'PRODUCT_LIST_SUCCESS':\r\n          return { loading: false, \r\n            products: action.payload.products, \r\n            pages: action.payload.pages, \r\n            page: action.payload.page,}\r\n        case 'PRODUCT_LIST_FAIL':\r\n            return { loading: false, error: action.payload} \r\n         default:\r\n             return state    \r\n    }\r\n}\r\n\r\nexport const productDetailsReducer = (state = { product: { reviews: []}}, action) => {\r\n    switch (action.type) {\r\n        case 'PRODUCT_DETAILS_REQUEST': \r\n         return { loading: true, ...state }\r\n         case 'PRODUCT_DETAILS_SUCCESS':\r\n          return { loading: false, product: action.payload}\r\n        case 'PRODUCT_DETAILS_FAIL':\r\n            return { loading: false, error: action.payload} \r\n         default:\r\n             return state    \r\n    }\r\n}\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case 'PRODUCT_DELETE_REQUEST':\r\n        return { loading: true }\r\n      case 'PRODUCT_DELETE_SUCCESS':\r\n        return { loading: false, success: true }\r\n      case 'PRODUCT_DELETE_FAIL':\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n  export const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case 'PRODUCT_CREATE_REQUEST':\r\n        return { loading: true }\r\n      case 'PRODUCT_CREATE_SUCCESS':\r\n        return { loading: false, success: true, product: action.payload }\r\n      case 'PRODUCT_CREATE_FAIL':\r\n        return { loading: false, error: action.payload }\r\n      case 'PRODUCT_CREATE_RESET':\r\n        return {}\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n      case 'PRODUCT_UPDATE_REQUEST':\r\n        return { loading: true }\r\n      case 'PRODUCT_UPDATE_SUCCESS':\r\n        return { loading: false, success: true, product: action.payload }\r\n      case 'PRODUCT_UPDATE_FAIL':\r\n        return { loading: false, error: action.payload }\r\n      case 'PRODUCT_UPDATE_RESET':\r\n        return { product: {} }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n  export const productReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case 'PRODUCT_CREATE_REVIEW_REQUEST':\r\n        return { loading: true }\r\n      case 'PRODUCT_CREATE_REVIEW_SUCCESS':\r\n        return { loading: false, success: true }\r\n      case 'PRODUCT_CREATE_REVIEW_FAIL':\r\n        return { loading: false, error: action.payload }\r\n      case 'PRODUCT_CREATE_REVIEW_RESET':\r\n        return {}\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n  export const productTopRatedReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n      case 'PRODUCT_TOP_REQUEST':\r\n        return { loading: true, products: [] }\r\n      case 'PRODUCT_TOP_SUCCESS':\r\n        return { loading: false, products: action.payload }\r\n      case 'PRODUCT_TOP_FAIL':\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }","K:\\React_workshop\\E-container\\frontend\\src\\Header.js",[],"K:\\React_workshop\\E-container\\frontend\\src\\Footer.js",[],"K:\\React_workshop\\E-container\\frontend\\src\\Home.js",[],"K:\\React_workshop\\E-container\\frontend\\src\\Product.js",[],"K:\\React_workshop\\E-container\\frontend\\src\\actions\\productAction.js",[],"K:\\React_workshop\\E-container\\frontend\\src\\Rating.js",[],"K:\\React_workshop\\E-container\\frontend\\src\\ProductDescription.js",[],"K:\\React_workshop\\E-container\\frontend\\src\\cart.js",[],"K:\\React_workshop\\E-container\\frontend\\src\\Cart.js",["177"],"import React,{useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from './Message'\r\nimport {addToCart, removeFromCart} from './actions/cartAction'\r\n\r\nconst Cart = ({match, location, history}) => {\r\n    const productid = match.params.id\r\n\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n     const dispatch = useDispatch()\r\n     \r\n     const cart = useSelector(state => state.cart)\r\n\r\n     const { cartItems } = cart\r\n\r\n     console.log(cartItems)\r\n\r\n     useEffect(() => {\r\n         if (productid) {\r\n             dispatch(addToCart(productid, qty))\r\n         }\r\n     },[dispatch, productid, qty])\r\n\r\n     const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n     }\r\n\r\n     const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n     }\r\n\r\n    return (\r\n       <Row>\r\n           <Col md={8} >\r\n              <h1>SHOPPING CART</h1>\r\n              {cartItems.length === 0 ? (\r\n                  <Message>\r\n                      Your Cart Is Empty <Link to='/'>Go Back</Link>\r\n                  </Message>\r\n              ) : (\r\n                  <ListGroup variant='flush'>\r\n                      {cartItems.map(item => (\r\n                          <ListGroup.Item key={item.product}> \r\n                                 <Row>\r\n                                     <Col md={2}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n\r\n                                     </Col>\r\n                                     <Col md={3} >\r\n                                         <Link to={`/product/${item.product}`} ><strong>{item.name} </strong></Link>\r\n                                     </Col>\r\n                                     <Col md={2}><strong>${item.price} </strong></Col>\r\n                                     <Col md={2}>\r\n                                     <Form.Control as='select' value={item.qty} \r\n                                       onChange={(e) => dispatch(addToCart(item.product,\r\n                                       Number(e.target.value)))} >\r\n                                       {[...Array(item.countInStock).keys()].map(x => (\r\n                                           <option key={x + 1} value={x + 1}>{x + 1}</option>\r\n                                       ))}\r\n                                       </Form.Control>\r\n                                     </Col>\r\n                                    <Col md={2}>\r\n                                       <Button type='button' variant='dark' onClick={() =>\r\n                                       removeFromCartHandler(item.product) }>\r\n                                        <i className='fas fa-trash'></i>\r\n                                       </Button>\r\n                                     </Col>\r\n                                 </Row>\r\n                          </ListGroup.Item>\r\n                      ))}\r\n                  </ListGroup>\r\n              )}\r\n           </Col>\r\n           <Col md={4}>\r\n             <ListGroup >\r\n                  <ListGroup.Item  >\r\n                      <h2>SUBTOTAL ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) \r\n                      ITEMS</h2>\r\n                      <strong>${cartItems.reduce((acc, item) => acc + item.qty*item.price, 0)\r\n                      .toFixed(2)}</strong>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                      <Button\r\n                          type='button'\r\n                          className='btn-block'\r\n                          disabled={cartItems.length === 0}\r\n                          onClick={checkoutHandler}\r\n                            >\r\n                               PROCEED TO CHECKOUT\r\n                      </Button>\r\n                  </ListGroup.Item>\r\n             </ListGroup>\r\n           </Col>\r\n\r\n       </Row>\r\n    )\r\n}\r\n\r\nexport default Cart\r\n","K:\\React_workshop\\E-container\\frontend\\src\\Message.js",[],"K:\\React_workshop\\E-container\\frontend\\src\\Loader.js",[],"K:\\React_workshop\\E-container\\frontend\\src\\reducers\\cartReducer.js",[],"K:\\React_workshop\\E-container\\frontend\\src\\actions\\cartAction.js",[],"K:\\React_workshop\\E-container\\frontend\\src\\reducers\\userReducer.js",[],"K:\\React_workshop\\E-container\\frontend\\src\\userLogin.js",["178","179","180","181","182","183","184","185"],"K:\\React_workshop\\E-container\\frontend\\src\\FormContainer.js",[],"K:\\React_workshop\\E-container\\frontend\\src\\actions\\userAction.js",[],"K:\\React_workshop\\E-container\\frontend\\src\\UserLogin.js",[],"K:\\React_workshop\\E-container\\frontend\\src\\Register.js",[],"K:\\React_workshop\\E-container\\frontend\\src\\Profile.js",["186","187"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Table,Form, Button, Row, Col } from 'react-bootstrap'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from './Message'\r\nimport Loader from './Loader'\r\nimport { getUserDetails, updateUserProfile } from './actions/userAction'\r\nimport {listMyOrders } from './actions/orderActions'\r\n\r\n\r\n\r\n\r\nconst Profile = ({location, history}) => {\r\n     const [email, setEmail] = useState('')\r\n     const [password, setPassword] = useState('')\r\n     const [ name, setName ] = useState('')\r\n     const [ confirmPassword, setConfirmPassword] = useState('')\r\n     const [message, setMessage ] = useState(null)\r\n     const dispatch = useDispatch()\r\n\r\n     const userDetails = useSelector(state => state.userDetails)\r\n     const { loading, error, user } = userDetails\r\n    \r\n     const userLogin = useSelector(state => state.userLogin)\r\n     const {  userInfo } = userLogin\r\n\r\n     const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\r\n     const { success } = userUpdateProfile\r\n\r\n  const orderMyList = useSelector(state => state.orderMyList)\r\n  const { loading:loadingOrders, error:errorOrders, orders } = orderMyList\r\n \r\n\r\n     \r\n\r\n    \r\n\r\n     useEffect(() => {\r\n         if( !userInfo ){\r\n             history.push('/login')\r\n         } else {\r\n             if(!user || !user.name || success) {\r\n                 dispatch({type: 'USER_UPDATE_PROFILE_RESET'})\r\n                 dispatch(getUserDetails('profile'))\r\n                 dispatch(listMyOrders())\r\n             } else {\r\n                 setName(user.name)\r\n                 setEmail(user.email)\r\n             }\r\n         }\r\n       \r\n     },[history, dispatch, userInfo, user])\r\n\r\n     const submitHandler = (e) => {\r\n         e.preventDefault()\r\n       if(password !== confirmPassword) {\r\n         setMessage('passwords do not match')\r\n       } else {\r\n         dispatch(updateUserProfile({id: user._id, name, email, password }))\r\n       }\r\n         \r\n\r\n     }\r\n\r\n     \r\n\r\n    return <Row>\r\n           <Col md={3}>\r\n           <h2>USER PROFILE</h2>\r\n    {error && <Message variant='danger'>{error}</Message>}\r\n    {message && <Message variant='danger'>{message}</Message>}\r\n    {success && <Message variant='success'>success</Message>}\r\n    {loading && <Loader />}\r\n        <Form onSubmit={submitHandler} >\r\n\r\n        <Form.Group controlId='name'>\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control\r\n                 type='name' \r\n                 placeholder=\"Enter name\"\r\n                 value={name}\r\n                 onChange={(e) => setName(e.target.value)}\r\n                 ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId='email'>\r\n                <Form.Label>Email Address</Form.Label>\r\n                <Form.Control\r\n                 type='email' \r\n                 placeholder=\"Enter email\"\r\n                 value={email}\r\n                 onChange={(e) => setEmail(e.target.value)}\r\n                 ></Form.Control>\r\n                 \r\n            </Form.Group> <Form.Group controlId='password'>\r\n                <Form.Label>password</Form.Label>\r\n                <Form.Control\r\n                 type='password' \r\n                 placeholder=\"Enter password\"\r\n                 value={password}\r\n                 onChange={(e) => setPassword(e.target.value)}\r\n                 ></Form.Control>\r\n            </Form.Group>\r\n\r\n\r\n            <Form.Group controlId='confirmPassword'>\r\n                <Form.Label>Confirm Password</Form.Label>\r\n                <Form.Control\r\n                 type='password' \r\n                 placeholder=\"Confirm password\"\r\n                 value={confirmPassword}\r\n                 onChange={(e) => setConfirmPassword(e.target.value)}\r\n                 ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n                Update\r\n            </Button>\r\n             </Form>\r\n\r\n\r\n           </Col>\r\n           <Col md={9}>\r\n               <h2>MY ORDERS</h2>\r\n               {loadingOrders ? (\r\n          <Loader />\r\n        ) : errorOrders ? (\r\n          <Message variant='danger'>{errorOrders}</Message>\r\n        ) : (\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>DATE</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>DELIVERED</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order) => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.createdAt.substring(0, 10)}</td>\r\n                  <td>{order.totalPrice}</td>\r\n                  <td>\r\n                    {order.isPaid ? (\r\n                      order.paidAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {order.isDelivered ? (\r\n                      order.deliveredAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                      <Button className='btn-sm' variant='light'>\r\n                        Details\r\n                      </Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n           </Col>\r\n    </Row>\r\n}\r\n\r\nexport default Profile","K:\\React_workshop\\E-container\\frontend\\src\\Shipping.js",["188"],"import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from './FormContainer'\r\nimport CheckoutSteps from './CheckoutSteps'\r\nimport { saveShippingAddress} from './actions/cartAction'\r\n\r\n\r\nconst Shipping = ({ history }) => {\r\n     const cart = useSelector(state => state.cart)\r\n     const dispatch = useDispatch()\r\n     const { shippingAddress} = cart\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n   \r\n  \r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({address, city, postalCode, country}))\r\n        history.push('./payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n\r\n           <h1>SHIPPING</h1>\r\n           <Form onSubmit={submitHandler} >\r\n\r\n        <Form.Group controlId='address'>\r\n                <Form.Label>Address</Form.Label>\r\n                <Form.Control\r\n                 type='text' \r\n                 placeholder=\"Enter address\"\r\n                 value={address}\r\n                 required\r\n                 onChange={(e) => setAddress(e.target.value)}\r\n                 ></Form.Control>\r\n            </Form.Group>\r\n\r\n           \r\n\r\n            <Form.Group controlId='city'>\r\n                <Form.Label>City</Form.Label>\r\n                <Form.Control\r\n                 type='text' \r\n                 placeholder=\"Enter City\"\r\n                 value={city}\r\n                 required\r\n                 onChange={(e) => setCity(e.target.value)}\r\n                 ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='postalCode'>\r\n                <Form.Label>Postal Code</Form.Label>\r\n                <Form.Control\r\n                 type='text' \r\n                 placeholder=\"Enter postal code\"\r\n                 value={postalCode}\r\n                 required\r\n                 onChange={(e) => setPostalCode(e.target.value)}\r\n                 ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='country'>\r\n                <Form.Label>Country</Form.Label>\r\n                <Form.Control\r\n                 type='text' \r\n                 placeholder=\"Enter country\"\r\n                 value={country}\r\n                 required\r\n                 onChange={(e) => setCountry(e.target.value)}\r\n                 ></Form.Control>\r\n            </Form.Group>\r\n\r\n            \r\n\r\n            <Button type='submit' variant='primary'>\r\n              continue\r\n            </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default Shipping\r\n","K:\\React_workshop\\E-container\\frontend\\src\\checkoutSteps.js",[],"K:\\React_workshop\\E-container\\frontend\\src\\CheckoutSteps.js",[],"K:\\React_workshop\\E-container\\frontend\\src\\PlaceOrder.js",["189","190"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {  Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from './Message'\r\nimport CheckoutSteps from './CheckoutSteps'\r\nimport { createOrder } from './actions/orderActions'\r\n\r\nconst PlaceOrder = ({history}) => {\r\n       const dispatch = useDispatch()\r\n       const cart = useSelector(state => state.cart)\r\n    \r\n       const addDecimals = (num) => {\r\n           return (Math.round(num*100)/100).toFixed(2)\r\n       }\r\n\r\n       cart.itemsPrice = addDecimals(cart.cartItems.reduce(\r\n           (acc, item) => acc + item.price * item.qty, 0\r\n       ))\r\n        cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 10 : 100)\r\n\r\n        cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\r\n        \r\n        cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n        const orderCreate = useSelector(state => state.orderCreate )\r\n        const { order, success, error } = orderCreate\r\n\r\n        useEffect(() => {\r\n            if(success) {\r\n                history.push(`/order/${order._id}`)\r\n            }\r\n            // eslint-disable-next-line\r\n        }, [history, success])\r\n\r\n       const placeOrderHandler = () => {\r\n           dispatch(createOrder({\r\n               orderItems: cart.cartItems,\r\n               shippingAddress: cart.shippingAddress,\r\n               paymentMethod: cart.paymentMethod,\r\n               itemsPrice: cart.itemsPrice,\r\n               shippingPrice: cart.shippingPrice,\r\n               taxPrice: cart.taxPrice,\r\n               totalPrice: cart.totalPrice,\r\n           }))\r\n       }\r\n\r\n\r\n    return (\r\n        <>\r\n           <CheckoutSteps step1 step2 step3 step4 />\r\n           <Row>\r\n               <Col md={8} >\r\n                   <ListGroup variant='flush'>\r\n                       <ListGroup.Item>\r\n                          <h1>SHIPPING</h1>\r\n                          <p>\r\n                              <strong>Address</strong>\r\n                              {cart.shippingAddress.address}, {cart.shippingAddress.city}{' '}\r\n                              {cart.shippingAddress.postalCode},{' '}\r\n                              {cart.shippingAddress.country}\r\n                          </p>\r\n                       </ListGroup.Item>\r\n                       <ListGroup.Item>\r\n                           <h1>PAYMENT METHOD</h1>\r\n                           <strong>Method : </strong>\r\n                           {cart.paymentMethod}\r\n                       </ListGroup.Item>\r\n                       <ListGroup.Item>\r\n                           <h2>Order Items</h2>\r\n                           {cart.cartItems.length === 0 ? (\r\n                               <Message>Your cart is empty</Message>\r\n                           ) : (\r\n                               <ListGroup variant='flush'>\r\n                                   {cart.cartItems.map((item, index) => (\r\n                               <ListGroup.Item key={index}>\r\n                                    <Row>\r\n                                        <Col md={1}>\r\n                                             <Image src={item.image} alt={item.name}\r\n                                              fluid rounded/>\r\n                                        </Col>\r\n                                        <Col>\r\n                                             <Link to={`/product/${item.product}`} >\r\n                                                 {item.name}\r\n                                             </Link>\r\n                                        </Col>\r\n                                        <Col md={4}>\r\n                                              {item.qty} x ${item.price} = ${item.qty*item.price}\r\n                                        </Col>\r\n                                    </Row>\r\n                               </ListGroup.Item>\r\n                           ))}\r\n                       \r\n                               </ListGroup>\r\n                           )}\r\n                           </ListGroup.Item>\r\n                           </ListGroup>\r\n                            </Col>\r\n               <Col md={4}>\r\n                  <Card>\r\n                      <ListGroup>\r\n                          <ListGroup.Item>\r\n                              <h2>Order Summary</h2>\r\n                          </ListGroup.Item>\r\n                          <ListGroup.Item>\r\n                              <Row>\r\n                                  <Col>Items</Col>\r\n                                  <Col>${cart.itemsPrice}</Col>\r\n                              </Row>\r\n                          </ListGroup.Item>\r\n                          <ListGroup.Item>\r\n                              <Row>\r\n                                  <Col>Shipping</Col>\r\n                                  <Col>${cart.shippingPrice}</Col>\r\n                              </Row>\r\n                          </ListGroup.Item>\r\n                          <ListGroup.Item>\r\n                              <Row>\r\n                                  <Col>Tax</Col>\r\n                                  <Col>${cart.taxPrice}</Col>\r\n                              </Row>\r\n                          </ListGroup.Item>\r\n                          <ListGroup.Item>\r\n                              <Row>\r\n                                  <Col>Total</Col>\r\n                                  <Col>${cart.totalPrice}</Col>\r\n                              </Row>\r\n                          </ListGroup.Item>\r\n                          <ListGroup.Item>\r\n                              {error && <Message variant='danger'>{error} </Message>}\r\n                          </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                              <Button type='button' className='btn-block' disabled={cart.\r\n                                cartItems === 0} onClick={placeOrderHandler}>Place Order\r\n                                </Button>\r\n                          </ListGroup.Item>\r\n                      </ListGroup>\r\n                  </Card>\r\n               </Col>\r\n          </Row> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlaceOrder\r\n","K:\\React_workshop\\E-container\\frontend\\src\\PaymentScreen.js",["191","192","193","194","195","196","197","198","199"],"import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from './FormContainer'\r\nimport CheckoutSteps from './CheckoutSteps'\r\nimport { savePaymentMethod} from './actions/cartAction'\r\n\r\n\r\nconst Payment = ({ history }) => {\r\n     const cart = useSelector(state => state.cart)\r\n     const dispatch = useDispatch()\r\n     const { shippingAddress} = cart\r\n\r\n     if(!shippingAddress) {\r\n         history.push('./shipping')\r\n     }\r\n\r\n     const[paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n   \r\n  \r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('./placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n\r\n           <h1>Payment Method</h1>\r\n           <Form onSubmit={submitHandler} >\r\n\r\n           <Form.Group >\r\n             <Form.Label as='Legend' >Select Mehtod</Form.Label>\r\n          \r\n            <Col>\r\n               <Form.Check \r\n               type='radio'\r\n               label='PayPal or Credit Card'\r\n               id='PayPal'\r\n               name='paymentMethod'\r\n               value='PayPal'\r\n               checked\r\n               onChange={ (e) => setPaymentMethod(e.target.value)}\r\n\r\n               >\r\n                </Form.Check>\r\n\r\n                <Form.Check \r\n               type='radio'\r\n               label='Stripe'\r\n               id='Stripe'\r\n               name='paymentMethod'\r\n               value='Stripe'\r\n               onChange={ (e) => setPaymentMethod(e.target.value)}\r\n\r\n               >\r\n                </Form.Check>\r\n            </Col>\r\n\r\n            </Form.Group>\r\n            \r\n            <Button type='submit' variant='primary'>\r\n              continue\r\n            </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default Payment\r\n","K:\\React_workshop\\E-container\\frontend\\src\\reducers\\orderReducer.js",[],"K:\\React_workshop\\E-container\\frontend\\src\\actions\\orderActions.js",[],"K:\\React_workshop\\E-container\\frontend\\src\\Orders.js",["200","201"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { PayPalButton, payPalButton } from 'react-paypal-button-v2'\r\nimport {  Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from './Message'\r\nimport Loader from './Loader'\r\nimport { getOrderDetails, payOrder} from './actions/orderActions'\r\n\r\n\r\nconst Orders = ({match}) => {\r\n       const [sdkReady, setSdkReady] = useState(false)\r\n       const orderId = match.params.id\r\n       const dispatch = useDispatch()\r\n       \r\n        \r\n        const orderDetails = useSelector((state) => state.orderDetails )\r\n        const { order, loading, error } = orderDetails\r\n\r\n        const orderPay = useSelector((state) => state.orderPay )\r\n        const { loading:loadingPay, success:successPay } = orderPay\r\n\r\n      \r\n        if(!loading) {\r\n       const addDecimals = (num) => {\r\n        return (Math.round(num*100)/100).toFixed(2)\r\n    }\r\n\r\n        order.itemsPrice = addDecimals(order.orderItems.reduce(\r\n            (acc, item) => acc + item.price * item.qty, 0\r\n        ))\r\n        }\r\n    \r\n\r\n        useEffect(() => {\r\n            const addPayPalScript = async () => {\r\n                const {data: clientId} = await axios.get('/api/config/paypal')\r\n                const script = document.createElement('script')\r\n                script.type = 'text/javascript'\r\n                script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n                script.async = true\r\n                script.onload = ()  => {\r\n                    setSdkReady(true)\r\n                }\r\n                document.body.appendChild(script)\r\n            }\r\n            if (!order || successPay) {\r\n                dispatch({type: 'ORDER_PAY_RESET'})\r\n                dispatch(getOrderDetails(orderId))\r\n\r\n            } else if (!order.isPaid) {\r\n                if (!window.paypal) {\r\n                    addPayPalScript()\r\n                } else {\r\n                    setSdkReady(true)\r\n                }\r\n            }\r\n            \r\n        }, [dispatch, orderId, successPay, order])\r\n\r\n        const successPaymentHandler = (paymentResult) => {\r\n            console.log(paymentResult)\r\n            dispatch(payOrder(orderId, paymentResult))\r\n        }\r\n\r\n        \r\n\r\n      \r\n    return loading ? <Loader /> : error ? <Message variant='danger' >\r\n        {error} \r\n        </Message> :<>\r\n             <h1>Order {order._id} </h1>\r\n            \r\n           <Row>\r\n               <Col md={8} >\r\n                   <ListGroup variant='flush'>\r\n                       <ListGroup.Item>\r\n                          <h1>SHIPPING</h1>\r\n                          <p>\r\n                              <strong>Name : </strong>{order.user.name}\r\n                          </p>\r\n                          \r\n                          <p>\r\n                          <strong>Email : </strong><a href={`mailto:${order.user.email}`} >{order.user.email} </a>\r\n                          </p>\r\n                          <p>\r\n                              <strong>Address</strong>\r\n                              {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\r\n                              {order.shippingAddress.postalCode},{' '}\r\n                              {order.shippingAddress.country}\r\n                          </p>\r\n                          {order.isDelivered ? (<Message variant='success'>Delivered on {order.deliveredAt} </Message>) :\r\n                           (<Message variant='danger'>Not Delivered</Message>)}\r\n                       </ListGroup.Item>\r\n                       <ListGroup.Item>\r\n                           <h2>PAYMENT METHOD</h2>\r\n                           <p>\r\n                           <strong>Method : </strong>\r\n                           {order.paymentMethod}\r\n                           </p>\r\n                           {order.isPaid ? (<Message variant='success'>Paid on{order.paidAt} </Message>) :\r\n                           (<Message variant='danger'>Not Paid</Message>)}\r\n                       </ListGroup.Item>\r\n                       <ListGroup.Item>\r\n                       <h2>Order Items</h2>\r\n                           {order.orderItems.length === 0 ? (\r\n                               <Message>Your cart is empty</Message>\r\n                           ) : (\r\n                               <ListGroup variant='flush'>\r\n                                   {order.orderItems.map((item, index) => (\r\n                               <ListGroup.Item key={index}>\r\n                                    <Row>\r\n                                        <Col md={1}>\r\n                                             <Image src={item.image} alt={item.name}\r\n                                              fluid rounded/>\r\n                                        </Col>\r\n                                        <Col>\r\n                                             <Link to={`/product/${item.product}`} >\r\n                                                 {item.name}\r\n                                             </Link>\r\n                                        </Col>\r\n                                        <Col md={4}>\r\n                                              {item.qty} x ${item.price} = ${item.qty*item.price}\r\n                                        </Col>\r\n                                    </Row>\r\n                               </ListGroup.Item>\r\n                           ))}\r\n                       \r\n                               </ListGroup>\r\n                           )}\r\n                           </ListGroup.Item>\r\n                           </ListGroup>\r\n                            </Col>\r\n               <Col md={4}>\r\n                  <Card>\r\n                      <ListGroup>\r\n                          <ListGroup.Item>\r\n                              <h2>ORDER SUMMARY</h2>\r\n                          </ListGroup.Item>\r\n                          <ListGroup.Item>\r\n                              <Row>\r\n                                  <Col>Items Price:</Col>\r\n                                  <Col>${order.itemsPrice}</Col>\r\n                              </Row>\r\n                          </ListGroup.Item>\r\n                          <ListGroup.Item>\r\n                              <Row>\r\n                                  <Col>Shipping:</Col>\r\n                                  <Col>${order.shippingPrice}</Col>\r\n                              </Row>\r\n                          </ListGroup.Item>\r\n                          <ListGroup.Item>\r\n                              <Row>\r\n                                  <Col>Tax:</Col>\r\n                                  <Col>${order.taxPrice}</Col>\r\n                              </Row>\r\n                          </ListGroup.Item>\r\n                          <ListGroup.Item>\r\n                              <Row>\r\n                                  <Col>Total:</Col>\r\n                                  <Col>${order.totalPrice}</Col>\r\n                              </Row>\r\n                          </ListGroup.Item>\r\n                            {!order.isPaid && (\r\n                                <ListGroup.Item>\r\n                                    {loadingPay && <Loader />}\r\n                                    {!sdkReady ? (\r\n                                        <Loader />\r\n                                    ): (\r\n                                        <PayPalButton\r\n                                        amount= {order.totalPrice}\r\n                                        onSuccess={successPaymentHandler}\r\n                                        />\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                            )\r\n\r\n                            }\r\n                      </ListGroup>\r\n                  </Card>\r\n               </Col>\r\n          </Row> \r\n        </>\r\n    \r\n}\r\n\r\nexport default Orders","K:\\React_workshop\\E-container\\frontend\\src\\UserListScreen.js",[],"K:\\React_workshop\\E-container\\frontend\\src\\UserEditScreen.js",[],"K:\\React_workshop\\E-container\\frontend\\src\\ProductListScreen.js",[],"K:\\React_workshop\\E-container\\frontend\\src\\ProductEditScreen.js",[],"K:\\React_workshop\\E-container\\frontend\\src\\OrderListScreen.js",[],"K:\\React_workshop\\E-container\\frontend\\src\\SearchBox.js",[],"K:\\React_workshop\\E-container\\frontend\\src\\Paginate.js",[],"K:\\React_workshop\\E-container\\frontend\\src\\ProductCarousel.js",[],{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","severity":1,"message":"207","line":1,"column":8,"nodeType":"208","messageId":"209","endLine":1,"endColumn":13},{"ruleId":"206","severity":1,"message":"210","line":4,"column":52,"nodeType":"208","messageId":"209","endLine":4,"endColumn":56},{"ruleId":"206","severity":1,"message":"211","line":1,"column":27,"nodeType":"208","messageId":"209","endLine":1,"endColumn":36},{"ruleId":"206","severity":1,"message":"212","line":4,"column":10,"nodeType":"208","messageId":"209","endLine":4,"endColumn":21},{"ruleId":"206","severity":1,"message":"213","line":4,"column":23,"nodeType":"208","messageId":"209","endLine":4,"endColumn":34},{"ruleId":"206","severity":1,"message":"214","line":5,"column":8,"nodeType":"208","messageId":"209","endLine":5,"endColumn":15},{"ruleId":"206","severity":1,"message":"215","line":6,"column":8,"nodeType":"208","messageId":"209","endLine":6,"endColumn":14},{"ruleId":"206","severity":1,"message":"216","line":7,"column":10,"nodeType":"208","messageId":"209","endLine":7,"endColumn":15},{"ruleId":"217","severity":2,"message":"218","line":11,"column":32,"nodeType":"208","endLine":11,"endColumn":40},{"ruleId":"217","severity":2,"message":"218","line":12,"column":38,"nodeType":"208","endLine":12,"endColumn":46},{"ruleId":"206","severity":1,"message":"219","line":2,"column":10,"nodeType":"208","messageId":"209","endLine":2,"endColumn":14},{"ruleId":"220","severity":1,"message":"221","line":53,"column":8,"nodeType":"222","endLine":53,"endColumn":43,"suggestions":"223"},{"ruleId":"206","severity":1,"message":"219","line":2,"column":10,"nodeType":"208","messageId":"209","endLine":2,"endColumn":14},{"ruleId":"206","severity":1,"message":"224","line":1,"column":17,"nodeType":"208","messageId":"209","endLine":1,"endColumn":25},{"ruleId":"225","severity":1,"message":"226","line":133,"column":89,"nodeType":"227","messageId":"228","endLine":133,"endColumn":90,"fix":"229"},{"ruleId":"206","severity":1,"message":"219","line":2,"column":10,"nodeType":"208","messageId":"209","endLine":2,"endColumn":14},{"ruleId":"206","severity":1,"message":"230","line":21,"column":12,"nodeType":"208","messageId":"209","endLine":21,"endColumn":19},{"ruleId":"206","severity":1,"message":"231","line":21,"column":21,"nodeType":"208","messageId":"209","endLine":21,"endColumn":31},{"ruleId":"206","severity":1,"message":"232","line":22,"column":12,"nodeType":"208","messageId":"209","endLine":22,"endColumn":16},{"ruleId":"206","severity":1,"message":"233","line":22,"column":18,"nodeType":"208","messageId":"209","endLine":22,"endColumn":25},{"ruleId":"206","severity":1,"message":"234","line":23,"column":12,"nodeType":"208","messageId":"209","endLine":23,"endColumn":22},{"ruleId":"206","severity":1,"message":"235","line":23,"column":24,"nodeType":"208","messageId":"209","endLine":23,"endColumn":37},{"ruleId":"206","severity":1,"message":"236","line":24,"column":12,"nodeType":"208","messageId":"209","endLine":24,"endColumn":19},{"ruleId":"206","severity":1,"message":"237","line":24,"column":21,"nodeType":"208","messageId":"209","endLine":24,"endColumn":31},{"ruleId":"206","severity":1,"message":"238","line":4,"column":24,"nodeType":"208","messageId":"209","endLine":4,"endColumn":36},{"ruleId":"206","severity":1,"message":"239","line":5,"column":11,"nodeType":"208","messageId":"209","endLine":5,"endColumn":17},"no-native-reassign",["240"],"no-negated-in-lhs",["241"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'Message' is defined but never used.","'Loader' is defined but never used.","'login' is defined but never used.","react-hooks/rules-of-hooks","React Hook \"useState\" is called in function \"userLogin\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'success'. Either include it or remove the dependency array.","ArrayExpression",["242"],"'useState' is defined but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"243","text":"244"},"'address' is assigned a value but never used.","'setAddress' is assigned a value but never used.","'city' is assigned a value but never used.","'setCity' is assigned a value but never used.","'postalCode' is assigned a value but never used.","'setPostalCode' is assigned a value but never used.","'country' is assigned a value but never used.","'setCountry' is assigned a value but never used.","'payPalButton' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"245","fix":"246"},[5938,5973],"\r\n                                .","Update the dependencies array to be: [history, dispatch, userInfo, user, success]",{"range":"247","text":"248"},[1783,1818],"[history, dispatch, userInfo, user, success]"]